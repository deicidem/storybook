function p(e,i,n){if(typeof window>"u"||!("IntersectionObserver"in window))return;const t=i.modifiers||{},o=i.value,{handler:v,options:f}=typeof o=="object"?o:{handler:o,options:{}},u=new IntersectionObserver((b=[],_)=>{var r;const s=(r=e._observe)===null||r===void 0?void 0:r[n.context._uid];if(!s)return;const c=b.some(a=>a.isIntersecting);v&&(!t.quiet||s.init)&&(!t.once||c||s.init)&&v(b,_,c),c&&t.once?d(e,i,n):s.init=!0},f);e._observe=Object(e._observe),e._observe[n.context._uid]={init:!1,observer:u},u.observe(e)}function d(e,i,n){var t;const o=(t=e._observe)===null||t===void 0?void 0:t[n.context._uid];o&&(o.observer.unobserve(e),delete e._observe[n.context._uid])}const w={inserted:p,unbind:d},x=w;export{x as i};
